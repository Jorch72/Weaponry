package com.smithsmodding.armory.weaponry.common.compatibility;

import com.smithsmodding.armory.api.IArmoryAPI;
import com.smithsmodding.armory.api.materials.IArmorMaterial;
import com.smithsmodding.armory.api.materials.MaterialRenderControllers;
import com.smithsmodding.armory.weaponry.Weaponry;
import com.smithsmodding.armory.weaponry.common.config.WeaponryConfigs;
import com.smithsmodding.armory.weaponry.common.compatibility.initializers.ArditeInitializer;
import com.smithsmodding.armory.weaponry.common.compatibility.initializers.AutoGeneratedMaterialInitializer;
import com.smithsmodding.armory.weaponry.common.compatibility.initializers.CobaltInitializer;
import com.smithsmodding.armory.weaponry.common.compatibility.initializers.ManyullunInitializer;
import com.smithsmodding.armory.weaponry.util.ModLogger;
import com.smithsmodding.armory.weaponry.util.References;
import com.smithsmodding.armory.weaponry.util.Client.TranslationKeys;
import com.smithsmodding.smithscore.util.common.ItemStackHelper;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.oredict.OreDictionary;
import slimeknights.tconstruct.library.TinkerRegistry;
import slimeknights.tconstruct.library.materials.Material;
import slimeknights.tconstruct.library.smeltery.CastingRecipe;
import slimeknights.tconstruct.shared.TinkerCommons;
import slimeknights.tconstruct.tools.TinkerMaterials;

import java.util.List;

/**
 * Created by marcf on 7/9/2016.
 */
public class ArmoryMaterialInitializer {

    public void onAPICallbackReceived(IArmoryAPI api) {
        //Disabled steel as it is not in Tinkers Construct anymore.
        //IArmorMaterial chain = api.getHelpers().getMaterialConstructionHelper().generateArmorMaterial(References.InternalNames.Materials.Vanilla.CHAIN, TranslationKeys.Materials.VisibleNames.Steel, "Steel", TextFormatting.GRAY, true, 1378, 0.25F, Colors.Metals.CHAIN, TinkerCommons.ingot);

        IArmorMaterial ardite = api.getHelpers().getMaterialConstructionHelper().generateArmorMaterial(References.InternalNames.Materials.TinkersConstruct.ARDITE, "Ardite", true, 2159, 18, 0.4F, TinkerCommons.ingotArdite);
        IArmorMaterial cobalt = api.getHelpers().getMaterialConstructionHelper().generateArmorMaterial(References.InternalNames.Materials.TinkersConstruct.COBALT, "Cobalt", true, 2056, 17, 0.3F, TinkerCommons.ingotCobalt);
        IArmorMaterial manyullun = api.getHelpers().getMaterialConstructionHelper().generateArmorMaterial(References.InternalNames.Materials.TinkersConstruct.MANYULLUN, "Manyullyn", true, 4215, 36, 0.489F, TinkerCommons.ingotManyullyn);

        ardite.setTranslationKey(TranslationKeys.Materials.VisibleNames.Ardite);
        cobalt.setTranslationKey(TranslationKeys.Materials.VisibleNames.Cobalt);
        manyullun.setTranslationKey(TranslationKeys.Materials.VisibleNames.Manyullun);

        if (Weaponry.side == Side.CLIENT) {
            ardite.setRenderInfo(new MaterialRenderControllers.Metal(TinkerMaterials.ardite.renderInfo.getVertexColor()));
            cobalt.setRenderInfo(new MaterialRenderControllers.Metal(TinkerMaterials.cobalt.renderInfo.getVertexColor()));
            manyullun.setRenderInfo(new MaterialRenderControllers.Metal(TinkerMaterials.manyullyn.renderInfo.getVertexColor()));
        }

        api.getArmorMaterialRegistry().registerMaterial(ardite, new ArditeInitializer());
        api.getArmorMaterialRegistry().registerMaterial(cobalt, new CobaltInitializer());
        api.getArmorMaterialRegistry().registerMaterial(manyullun, new ManyullunInitializer());

        if (WeaponryConfigs.doAutomaticTinkersConstructGeneration)
        {
            checkTinkersConstructMetals();
        }
    }

    private void checkTinkersConstructMetals() {
        ModLogger.getInstance().info("Started checking TiC Registry.");
        int recipeCount = 0;
        List<CastingRecipe> castingRecipe = TinkerRegistry.getAllTableCastingRecipes();

        for(CastingRecipe recipe : castingRecipe)
        {
            if (checkIfRegisterIsNeededForRecipe(recipe))
                recipeCount ++;
        }

        ModLogger.getInstance().info("Finished searching TiC Registry. Found: " + recipeCount + " suitable candidates.");
    }

    private boolean checkIfRegisterIsNeededForRecipe(CastingRecipe recipe)
    {
        if (recipe.getResult() == null)
            return false;

        int[] oreIds = OreDictionary.getOreIDs(recipe.getResult());

        //Verify if metal was not already registered.
        for (int oreId : oreIds)
        {
            String oreName = OreDictionary.getOreName(oreId);

            if (oreName.contains("ingot"))
            {
                String metalName = oreName.replace("ingot", "").toLowerCase();

                for(IArmorMaterial material : Weaponry.armory.getArmorMaterialRegistry().getArmorMaterials().values())
                {
                    if (material.getOreDicName().toLowerCase().equals(metalName))
                        return false;
                }

                if (TinkerRegistry.getMaterial(metalName.toLowerCase()) == Material.UNKNOWN)
                    return false;
            }
        }


        for (int oreId : oreIds)
        {
            if (OreDictionary.getOreName(oreId).toLowerCase().contains("ingot"))
            {
                String metalName = OreDictionary.getOreName(oreId).replace("ingot", "");
                ModLogger.getInstance().info("Found metal ingot in TiC LiquidCasting: " + OreDictionary.getOreName(oreId) + " - For Itemstack: " + ItemStackHelper.toString(recipe.getResult()) + " - Inserting it into armory if possible, with metal name:" + References.InternalNames.Materials.AUTOGENERATED + metalName + "!");

                IArmorMaterial autoGeneratedMaterial = Weaponry.armory.getHelpers().getMaterialConstructionHelper().generateArmorMaterial(References.InternalNames.Materials.AUTOGENERATED + metalName, metalName, true, recipe.getFluid().getFluid().getTemperature() * 1.4F * 3.2F, (int) ((recipe.getFluid().getFluid().getTemperature() * 1.4F * 3.2F)/ 167F), (recipe.getFluid().getFluid().getTemperature() * 1.4F * 3.2F)/ 8288F, recipe.getResult());
                Material material = TinkerRegistry.getMaterial(metalName);

                autoGeneratedMaterial.setTranslationKey(material.getLocalizedName());
                autoGeneratedMaterial.setRenderInfo(new MaterialRenderControllers.Metal(material.renderInfo.getVertexColor()));

                Weaponry.armory.getArmorMaterialRegistry().registerMaterial(autoGeneratedMaterial, new AutoGeneratedMaterialInitializer());

                return true;
            }
        }

        return false;
    }
}
